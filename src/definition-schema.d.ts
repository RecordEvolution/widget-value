/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Title = string;
export type Subtitle = string;
/**
 * The label for the value.
 */
export type Label = string;
/**
 * The unit of the value. e.g. Â°C or km/h
 */
export type Unit = string;
/**
 * Number of digits after the decimal point. (Default 0)
 */
export type Decimals = number;
/**
 * The value of the gauge
 */
export type Value = number;
/**
 * Draw multiple Charts based on the split column of a data table.
 */
export type MultiChart = boolean;
/**
 * This should be an ISO String date like 2023-11-04T22:47:52.351152+00:00. Will only be used to detect data age of data.
 */
export type Timestamp = string;
export type Value1 = number;
/**
 * You can specify a column in the input data to autogenerate dataseries for each distinct entry in this column. E.g. if you have a table with columns [city, timestamp, temperature] and specify 'city' as split column, then you will get a value field for each city.
 */
export type SplitDataBy = string;
/**
 * The data used to draw this data series.
 */
export type Data = {
  tsp?: Timestamp;
  value?: Value1;
  pivot?: SplitDataBy;
  [k: string]: unknown;
}[];
/**
 * Calculate the average over the given number of newest values. (If you use "Split data by", then per each of the pivot dataseries.) If not specified then the latest value is shown without modification.
 */
export type AverageLatestValues = number;
/**
 * If you provide timestamp data, the delivered value is only shown in the gauge when the age of the data is not older than the given maximum Latency in seconds.
 */
export type MaximumLatency = number;
export type ValueDisplays = {
  label?: Label;
  unit?: Unit;
  precision?: Decimals;
  value?: Value;
  multiChart?: MultiChart;
  data?: Data;
  styling?: Styling;
  advanced?: AdvancedSettings;
  [k: string]: unknown;
}[];

export interface InputData {
  title?: Title;
  subTitle?: Subtitle;
  dataseries?: ValueDisplays;
  [k: string]: unknown;
}
export interface Styling {
  labelColor?: LabelColor;
  valueColor?: ValueColor;
  [k: string]: unknown;
}
export interface LabelColor {
  [k: string]: unknown;
}
export interface ValueColor {
  [k: string]: unknown;
}
export interface AdvancedSettings {
  averageLatest?: AverageLatestValues;
  maxLatency?: MaximumLatency;
  [k: string]: unknown;
}
